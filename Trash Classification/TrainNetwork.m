%%
%To use this script: define your network as "lgraph", your training dataset...
%...as "imdsTrain", your Validating dataset as "imdsValidation"
%This script return "net" as your trained network.


inputSize = lgraph.Layers(1).InputSize;

%TRAIN NETWORK
%Resize images and Augmentation
pixelRange = [-30 30];
scaleRange = [0.9 1.1];
imageAugmenter = imageDataAugmenter( ...
    'RandXReflection',true, ...
    'RandXTranslation',pixelRange, ...
    'RandYTranslation',pixelRange, ...
    'RandXScale',scaleRange, ...
    'RandYScale',scaleRange, ...
    'RandRotation',[-180 180]);
augimdsTrain = augmentedImageDatastore(inputSize(1:2),imdsTrain, ...
    'DataAugmentation',imageAugmenter,'ColorPreprocessing','gray2rgb');
augimdsValidation = augmentedImageDatastore(inputSize(1:2), ...
    imdsValidation,'ColorPreprocessing','gray2rgb');

%Training options
options = trainingOptions("sgdm",...
    'MiniBatchSize',8,...
    'MaxEpochs',6,...
    'InitialLearnRate',1e-4,...
    'Shuffle','every-epoch',...
    'ValidationData',augimdsValidation,...
    'ValidationFrequency',3,...
    'Verbose',false,...
    'Plots','training-progress');

%Train
net = trainNetwork(augimdsTrain,lgraph,options);